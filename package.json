{
  "name": "webpack-ssr-react-ts-react-router",
  "version": "1.0.0",
  "description": "Simple Webpack boilerplate for SSR with Node, Typescript, React & React Router",
  "main": "webpack.config.js",
  "dependencies": {
    "express": "4.16.4",
    "react": "16.6.3",
    "react-dom": "16.6.3",
    "react-router": "4.3.1",
    "react-router-dom": "4.3.1"
  },
  "devDependencies": {
    "@types/express": "4.16.0",
    "@types/react": "16.7.6",
    "@types/react-dom": "16.0.9",
    "@types/react-router": "4.4.1",
    "@types/react-router-dom": "4.3.1",
    "awesome-typescript-loader": "5.2.1",
    "css-loader": "1.0.1",
    "html-webpack-plugin": "3.2.0",
    "json-beautify": "^1.0.1",
    "node-sass": "4.10.0",
    "nodemon": "1.18.6",
    "npm-run-all": "4.1.3",
    "sass-loader": "7.1.0",
    "ssh2": "^0.6.1",
    "style-loader": "0.23.1",
    "typescript": "3.1.6",
    "webpack": "4.25.1",
    "webpack-cli": "3.1.2",
    "webpack-dev-server": "3.1.10",
    "webpack-node-externals": "1.7.2"
  },
  "scripts": {
    "start": "npm-run-all --parallel start:*",
    "build": "npm-run-all build:*",
    "start:client": "webpack-dev-server --config webpack.client.js --mode development",
    "start:server": "npm-run-all --parallel dev:server:*",
    "dev:server:build": "webpack --config webpack.server.js --mode development --watch",
    "dev:server:run": "nodemon build-server/server.js",
    "build:client": "webpack --config webpack.client.js --mode production",
    "build:server": "webpack --config webpack.server.js --mode production",
    "build:increase": "node scripts/increaseBuild.js",
    "docker:check": "node scripts/dockerCheck",
    "docker:build": "node scripts/dockerBuild.js",
    "docker:upload": "node scripts/dockerUpload.js",
    "docker:local:run": "node scripts/dockerRun.js",
    "docker:local:stop": "node scripts/dockerStop.js",
    "docker:host:run": "node scripts/hostDockerRun.js",
    "docker:host:stop": "node scripts/hostDockerStop.js",
    "deploy": "npm run docker:check && npm run build && npm run docker:build && npm run docker:upload && npm run docker:host:stop && npm run docker:host:run"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}